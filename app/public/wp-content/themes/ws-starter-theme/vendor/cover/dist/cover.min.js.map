{"version":3,"sources":["cover.js"],"names":[],"mappings":"CAAA,SAAA,GACA,kBAAA,SAAA,OAAA,IAEA,QAAA,UAAA,GACA,gBAAA,SAEA,OAAA,QAAA,EAAA,QAAA,WAGA,EAAA,SAEA,SAAA,EAAA,GAEA,YAcA,SAAA,GAAA,EAAA,GAGA,MAFA,MAAA,SAAA,EAAA,GAEA,KAAA,SAAA,KAAA,GACA,KAAA,SAAA,KAAA,IAGA,KAAA,SAAA,KAAA,EAAA,MAEA,KAAA,QAAA,EAAA,UAAA,KAAA,SAAA,MAAA,KAAA,SAAA,QACA,KAAA,SAAA,KAAA,eAEA,KAAA,MAAA,KACA,KAAA,OAAA,KACA,KAAA,MAAA,KAEA,KAAA,SAAA,KACA,KAAA,SAAA,SAEA,MAAA,SA/BA,GAAA,GAAA,QAEA,EAAA,EAAA,QACA,EAAA,EAAA,GAAA,EAyYA,OArWA,GAAA,UAAA,UAGA,EAAA,SAGA,EAAA,SAGA,WAAA,SAGA,QAAA,KAGA,KAAA,EAGA,OAAA,EAGA,OAAA,GAUA,EAAA,UAAA,MAAA,WACA,CAAA,GACA,IADA,KAAA,QACA,KAAA,SACA,MAAA,SAEA,KAAA,eACA,KAAA,eAEA,KAAA,SAAA,EAAA,MAAA,KAAA,OAAA,MACA,KAAA,SAAA,EAAA,MAAA,KAAA,QAAA,MACA,EAAA,GAAA,SAAA,KAAA,UACA,EAAA,GAAA,oBAAA,KAAA,UACA,KAAA,SAAA,IAAA,SAAA,KAAA,UAEA,KAAA,SAGA,kBAAA,MAAA,QAAA,QACA,KAAA,QAAA,OAAA,KAAA,GAGA,EAAA,QAAA,eAAA,GAEA,EAAA,IAAA,GAAA,SACA,KAAA,SAEA,EAAA,IAAA,kBAAA,EAAA,MAAA,KAAA,OAAA,QAUA,EAAA,UAAA,aAAA,WACA,GAAA,GAAA,KAAA,QACA,EAAA,KAAA,QAEA,YAAA,EAAA,YAAA,EAAA,GAAA,UACA,KAAA,EAAA,QAAA,EAAA,IAAA,aAAA,WAAA,WAAA,WACA,EAAA,IAAA,WAAA,YAEA,EAAA,IAAA,WAAA,YAUA,EAAA,UAAA,aAAA,WACA,KAAA,SAAA,KACA,SAAA,WACA,MAAA,OACA,YAAA,IACA,YAAA,OACA,OAAA,OACA,aAAA,IACA,aAAA,UASA,EAAA,UAAA,QAAA,WACA,EAAA,IAAA,SAAA,KAAA,UACA,EAAA,IAAA,oBAAA,KAAA,UACA,KAAA,SAAA,IAAA,SAAA,KAAA,UAEA,KAAA,SAAA,WAAA,IAQA,EAAA,UAAA,OAAA,WAEA,KAAA,MAAA,KACA,KAAA,OAAA,KACA,KAAA,MAAA,KAEA,KAAA,SAEA,kBAAA,MAAA,QAAA,QACA,KAAA,QAAA,OAAA,KAAA,KAAA,UAGA,KAAA,SAAA,QAAA,UAAA,IASA,EAAA,UAAA,aAAA,WACA,GAEA,GAFA,EAAA,KAAA,QACA,EAAA,KAAA,QAGA,IAAA,gBAAA,GAAA,QACA,EAAA,EAAA,QAAA,EAAA,aAGA,KADA,EAAA,EAAA,UAEA,EAAA,GAAA,SACA,KAAA,EAAA,QAAA,EAAA,IAAA,aAAA,WAAA,cACA,KAAA,EAAA,QAAA,EAAA,IAAA,YAAA,QAAA,kBAEA,EAAA,EAAA,QAGA,OAAA,IAQA,EAAA,UAAA,iBAAA,WAIA,MAHA,MAAA,QACA,KAAA,MAAA,KAAA,SAAA,KAAA,UAAA,KAAA,SAAA,IAAA,GAAA,OAAA,KAAA,SAAA,SAAA,GAEA,KAAA,OAQA,EAAA,UAAA,kBAAA,WAIA,MAHA,MAAA,SACA,KAAA,OAAA,KAAA,SAAA,KAAA,WAAA,KAAA,SAAA,IAAA,GAAA,QAAA,GAEA,KAAA,QAQA,EAAA,UAAA,iBAAA,WAIA,MAHA,MAAA,QACA,KAAA,MAAA,KAAA,mBAAA,KAAA,qBAEA,KAAA,OAQA,EAAA,UAAA,gBAAA,WACA,GAAA,GAAA,UAAA,KAAA,QAAA,WAAA,EAAA,KAAA,QAEA,OAAA,GAAA,SAQA,EAAA,UAAA,iBAAA,WACA,GAAA,GAAA,UAAA,KAAA,QAAA,WAAA,EAAA,KAAA,QAEA,OAAA,GAAA,UAQA,EAAA,UAAA,gBAAA,WACA,MAAA,MAAA,mBAAA,KAAA,oBAAA,IAQA,EAAA,UAAA,OAAA,WACA,GACA,IADA,KAAA,QACA,KAAA,SAEA,MAAA,kBAAA,KAAA,mBACA,KAAA,kBAEA,KAAA,eAGA,EAAA,QAAA,WAAA,IASA,EAAA,UAAA,gBAAA,WACA,GAAA,GAAA,KAAA,QACA,EAAA,KAAA,QAQA,QANA,EAAA,KACA,MAAA,OACA,OAAA,OACA,IAAA,IAGA,EAAA,GACA,IAAA,OACA,EAAA,KACA,KAAA,EACA,MAAA,QAEA,MACA,KAAA,QACA,EAAA,KACA,KAAA,OACA,MAAA,GAEA,MACA,SACA,EAAA,KACA,QAAA,EAAA,QAAA,KAAA,mBAAA,GACA,MAAA,WAYA,EAAA,UAAA,aAAA,WACA,GAAA,GAAA,KAAA,QACA,EAAA,KAAA,QAQA,QANA,EAAA,KACA,MAAA,OACA,OAAA,OACA,KAAA,IAGA,EAAA,GACA,IAAA,MACA,EAAA,KACA,IAAA,EACA,OAAA,QAEA,MACA,KAAA,SACA,EAAA,KACA,IAAA,OACA,OAAA,GAEA,MACA,SACA,EAAA,KACA,OAAA,EAAA,SAAA,KAAA,oBAAA,GACA,OAAA,WAYA,EAAA,GAAA,GAAA,SAAA,GACA,MAAA,MAAA,KAAA,WACA,GAAA,GAAA,EAAA,MACA,EAAA,EAAA,KAAA,GACA,EAAA,gBAAA,GAAA,IAEA,KACA,EAAA,GAAA,GAAA,KAAA,IAGA,gBAAA,KAEA,WAAA,EACA,EAAA,SACA,YAAA,GACA,EAAA,cAOA,EAAA,GAAA,MAAA,YAAA,EAOA,EAAA,GAAA,MAAA,WAAA,WAEA,MADA,GAAA,GAAA,MAAA,EACA,MAGA","file":"cover.min.js","sourcesContent":["(function (factory) {\n  if (typeof define === 'function' && define.amd) {\n    // AMD. Register as an anonymous module.\n    define(['jquery'], factory);\n  } else if (typeof exports === 'object') {\n    // Node/CommonJS\n    module.exports = factory(require('jquery'));\n  } else {\n    // Browser globals\n    factory(jQuery);\n  }\n}(function ($, undefined) {\n\n  \"use strict\";\n\n  var PLUGIN_NAME = 'cover';\n\n  var $window     = $(window);\n  var old         = $.fn[PLUGIN_NAME];\n\n\n  /**\n   * Cover constructor\n   *\n   * @param {Element} element\n   * @param {Object} options\n   */\n  function Cover (element, options) {\n    this.$element = $(element);\n\n    if (this.$element.data(PLUGIN_NAME)) {\n      return this.$element.data(PLUGIN_NAME);\n    }\n\n    this.$element.data(PLUGIN_NAME, this);\n\n    this.options  = $.extend({}, this.DEFAULTS, options || {}, this.$element.data());\n    this.$wrapper = this._findWrapper();\n\n    this.width    = null;\n    this.height   = null;\n    this.ratio    = null;\n\n    this.onResize = null;\n    this.onRemove = null;\n\n    this._init();\n  }\n\n  /**\n   * Defaults options\n   *\n   * @type {Object}\n   */\n  Cover.prototype.DEFAULTS = {\n\n    // 'left', 'right' or 'center'\n    x: 'center',\n\n    // 'top', 'bottom' or 'center'\n    y: 'center',\n\n    // 'scroll' or 'fixed'\n    attachment: 'scroll',\n\n    // Wrapper selector used with 'closest'\n    wrapper: null,\n\n    // Use CSS if browser is compatible\n    css: true,\n\n    // onInit\n    onInit: undefined,\n\n    // onLoad\n    onLoad: undefined\n\n  };\n\n  /**\n   * Init\n   *\n   * @access private\n   * @return {void}\n   */\n  Cover.prototype._init = function () {\n    var options = this.options,\n        $element = this.$element,\n        $wrapper = this.$wrapper;\n\n    this._initWrapper();\n    this._initElement();\n\n    this.onResize = $.proxy(this.resize, this);\n    this.onRemove = $.proxy(this.destroy, this);\n    $window.on('resize', this.onResize);\n    $window.on('orientationchange', this.onResize);\n    this.$element.one('remove', this.onRemove);\n\n    this.resize();\n\n    // Callback\n    if (typeof this.options.onInit === 'function') {\n      this.options.onInit.call($element);\n    }\n\n    $element.trigger('initialized.'+PLUGIN_NAME);\n\n    if ($element.get(0).complete) {\n      this.loaded();\n    } else {\n      $element.one('load loadeddata', $.proxy(this.loaded, this));\n    }\n  };\n\n  /**\n   * Init wrapper\n   *\n   * @access private\n   * @return {void}\n   */\n  Cover.prototype._initWrapper = function() {\n    var options  = this.options,\n        $wrapper = this.$wrapper;\n\n    if (options.attachment === 'scroll' && !$wrapper.is('body')) {\n      if (-1 === $.inArray($wrapper.css('position'), ['absolute', 'relative', 'fixed'])) {\n        $wrapper.css('position', 'relative');\n      }\n      $wrapper.css('overflow', 'hidden');\n    }\n  };\n\n  /**\n   * Init element\n   *\n   * @access private\n   * @return {void}\n   */\n  Cover.prototype._initElement = function() {\n    this.$element.css({\n      'position':   'absolute',\n      'width':      'auto',\n      'min-width':  '0',\n      'max-width':  'none',\n      'height':     'auto',\n      'min-height': '0',\n      'max-height': 'none'\n    });\n  };\n\n  /**\n   * Destroy\n   *\n   * @return {[type]}\n   */\n  Cover.prototype.destroy = function () {\n    $window.off('resize', this.onResize);\n    $window.off('orientationchange', this.onResize);\n    this.$element.off('remove', this.onRemove);\n\n    this.$element.removeData(PLUGIN_NAME);\n  };\n\n  /**\n   * Loaded handler\n   *\n   * @return {void}\n   */\n  Cover.prototype.loaded = function () {\n    // Reset\n    this.width  = null;\n    this.height = null;\n    this.ratio  = null;\n\n    this.resize();\n\n    if (typeof this.options.onLoad === 'function') {\n      this.options.onLoad.call(this.$element);\n    }\n\n    this.$element.trigger('loaded.'+PLUGIN_NAME);\n  };\n\n  /**\n   * Find wrapper\n   *\n   * @access private\n   * @return {jQuery}\n   */\n  Cover.prototype._findWrapper = function () {\n    var options  = this.options,\n        $element = this.$element,\n        $wrapper;\n\n    if (typeof options.wrapper === 'string') {\n      $wrapper = $element.closest(options.wrapper);\n    } else {\n      $wrapper = $element.parent();\n      while (\n        !$wrapper.is('body') &&\n        -1 === $.inArray($wrapper.css('position'), ['relative', 'absolute']) &&\n        -1 === $.inArray($wrapper.css('display'), ['block', 'inline-block'])\n      ) {\n        $wrapper = $wrapper.parent();\n      }\n    }\n    return $wrapper;\n  };\n\n  /**\n   * Get original width\n   *\n   * @return {Number}\n   */\n  Cover.prototype.getOriginalWidth = function () {\n    if (!this.width) {\n      this.width = this.$element.attr('width') || this.$element.get(0).width || this.$element.width() || 1;\n    }\n    return this.width;\n  };\n\n  /**\n   * Get original height\n   *\n   * @return {Number}\n   */\n  Cover.prototype.getOriginalHeight = function () {\n    if (!this.height) {\n      this.height = this.$element.attr('height') || this.$element.get(0).height || 1;\n    }\n    return this.height;\n  };\n\n  /**\n   * Get original ratio\n   *\n   * @return {Number}\n   */\n  Cover.prototype.getOriginalRatio = function () {\n    if (!this.ratio) {\n      this.ratio = this.getOriginalWidth() / this.getOriginalHeight();\n    }\n    return this.ratio;\n  };\n\n  /**\n   * Get wrapper width\n   *\n   * @return {Number}\n   */\n  Cover.prototype.getWrapperWidth = function () {\n    var $wrapper = this.options.attachment === 'fixed' ? $window : this.$wrapper;\n\n    return $wrapper.width();\n  };\n\n  /**\n   * Get wrapper height\n   *\n   * @return {Number}\n   */\n  Cover.prototype.getWrapperHeight = function () {\n    var $wrapper = this.options.attachment === 'fixed' ? $window : this.$wrapper;\n\n    return $wrapper.height();\n  };\n\n  /**\n   * Get wrapper ratio\n   *\n   * @return {Number}\n   */\n  Cover.prototype.getWrapperRatio = function () {\n    return this.getWrapperWidth() / (this.getWrapperHeight() || 1);\n  };\n\n  /**\n   * Resize\n   *\n   * @return {void}\n   */\n  Cover.prototype.resize = function () {\n    var options  = this.options,\n        $element = this.$element;\n\n    if (this.getWrapperRatio() < this.getOriginalRatio()) {\n      this._resizeNarrower();\n    } else {\n      this._resizeWider();\n    }\n\n    $element.trigger('resized.'+PLUGIN_NAME);\n  };\n\n  /**\n   * Resize when narrower\n   *\n   * @access private\n   * @return {void}\n   */\n  Cover.prototype._resizeNarrower = function() {\n    var options  = this.options,\n        $element = this.$element;\n\n    $element.css({\n      'width' : 'auto',\n      'height': '100%',\n      'top': 0\n    });\n\n    switch (options.x) {\n      case 'left':\n        $element.css({\n          left: 0,\n          right: 'none'\n        });\n        break;\n      case 'right':\n        $element.css({\n          left: 'none',\n          right: 0\n        });\n        break;\n      default:\n        $element.css({\n          left: -(($element.width() - this.getWrapperWidth()) / 2),\n          right: 'none'\n        });\n    }\n\n  };\n\n  /**\n   * Resize when wider\n   *\n   * @access private\n   * @return {void}\n   */\n  Cover.prototype._resizeWider = function() {\n    var options  = this.options,\n        $element = this.$element;\n\n    $element.css({\n      'width' : '100%',\n      'height': 'auto',\n      'left': 0\n    });\n\n    switch (options.y) {\n      case 'top':\n        $element.css({\n          top: 0,\n          bottom: 'none'\n        });\n        break;\n      case 'bottom':\n        $element.css({\n          top: 'none',\n          bottom: 0\n        });\n        break;\n      default:\n        $element.css({\n          top: -(($element.height() - this.getWrapperHeight()) / 2),\n          bottom: 'none'\n        });\n    }\n\n  };\n\n  /**\n   * jQuery plugin\n   *\n   * @param  {Object} o\n   * @return {jQuery}\n   */\n  $.fn[PLUGIN_NAME] = function (o) {\n    return this.each(function () {\n      var $this    = $(this),\n          instance = $this.data(PLUGIN_NAME),\n          options  = typeof o === 'object' ? o : {};\n\n      if (!instance) {\n        instance = new Cover(this, options);\n      }\n\n      if (typeof o === 'string') {\n\n        if (o === 'resize') {\n          instance.resize();\n        } else if (o === 'destroy') {\n          instance.destroy();\n        }\n\n      }\n    });\n  };\n\n  $.fn.cover.Constructor = Cover;\n\n  /**\n   * No conflict\n   *\n   * @return Plugin\n   */\n  $.fn.cover.noConflict = function () {\n    $.fn.cover = old;\n    return this;\n  };\n\n  return Cover;\n\n}));\n"],"sourceRoot":"/source/"}